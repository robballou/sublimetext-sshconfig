# SYNTAX TEST "Packages/SSH Config/SSH Config.sublime-syntax"

User foo
#^^^^^^^ meta.block.naked.ssh_config
#^^^ meta.mapping.key.ssh_config keyword.other.ssh_config
#    ^^^ meta.mapping.value.ssh.common string.unquoted.ssh.common
Port 22
#^^^^^^ meta.block.naked.ssh_config
#^^^ meta.mapping.key.ssh_config keyword.other.ssh_config
#    ^^ meta.mapping.value.ssh.common meta.number.integer.ssh_config constant.numeric.value.ssh_config
Include ~/.ssh/config_*_cloud
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.block.naked.ssh_config
#^^^^^^ meta.mapping.key.ssh_config keyword.other.ssh_config
#       ^^^^^^^^^^^^^^^^^^^^^ meta.mapping.value.ssh.common meta.path.ssh.common entity.name.ssh.common
#       ^ variable.language.home.ssh.common
#        ^ punctuation.separator.path.ssh.common
#         ^ - punctuation
#             ^ punctuation.separator.path.ssh.common
#                     ^ constant.other.wildcard.asterisk.ssh.common

Match Version Op?nSSH_10.0
#^^^^^^^^^^^^^^^^^^^^^^^^^ meta.block.match.ssh_config
#^^^^ keyword.control.conditional.ssh_config
#    ^^^^^^^^^^^^^^^^^^^^^ meta.statement.conditional.ssh_config
#     ^^^^^^^ keyword.other.ssh_config
#             ^^^^^^^^^^^^ string.unquoted.ssh_config
#               ^ constant.other.wildcard.questionmark.ssh.common


Match Host targ?t_host Exec not_inside_network User sue
#<- - meta.block.naked - meta.block meta.block
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.block.match.ssh_config - meta.block meta.block
#^^^^ keyword.control.conditional.ssh_config
#    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.statement.conditional.ssh_config
#     ^^^^ keyword.other.ssh_config
#          ^^^^^^^^^^^ entity.name.label.host-alias.ssh_config
#              ^ constant.other.wildcard.questionmark.ssh.common
#                      ^^^^ keyword.other.ssh_config
#                           ^^^^^^^^^^^^^^^^^^ source.shell.embedded.ssh source.shell.bash variable.function.shell
#                                              ^^^^ keyword.other.ssh_config
#                                                   ^^^ string.unquoted.ssh_config
#          @@@@@@@@@@@ local-definition "Alias: targ?t_host"
#                           @@@@@@@@@@@@@@@@@@ reference
    ProxyCommand ssh -W %h:%p proxy_server
#<- - meta.statement - meta.block meta.block
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.block.match.ssh_config - meta.block meta.block
#   ^^^^^^^^^^^^ meta.mapping.key.ssh_config keyword.other.ssh_config
#                ^^^^^^^^^^^^^^^^^^^^^^^^^ source.shell.embedded.ssh source.shell.bash
#                ^^^ variable.function.shell
#                   ^^^^^^^^^^^^^^^^^^^^^^ meta.function-call.arguments.shell
#                    ^^ meta.parameter.option.shell variable.parameter.option.shell
#                    ^ punctuation.definition.parameter.shell
#                       ^^^^^ meta.string string.unquoted.shell
#                       ^^ constant.other.placeholder.ssh
#                          ^^ constant.other.placeholder.ssh
#                             ^^^^^^^^^^^^ meta.string string.unquoted.shell
#                @@@ reference
##                       ^^ meta.string.shell string.unquoted.shell

Match Host one,two All
#^^^^^^^^^^^^^^^^^^^^^^ meta.block.match.ssh_config - meta.block meta.block
#^^^^ keyword.control.conditional.ssh_config
#    ^^^^^^^^^^^^^^^^^ meta.statement.conditional.ssh_config
#     ^^^^ keyword.other.ssh_config
#          ^^^ entity.name.label.host-alias.ssh_config
#             ^ punctuation.separator.sequence.ssh.common - entity
#              ^^^ entity.name.label.host-alias.ssh_config
#                  ^^^ constant.language.boolean.true.ssh.common
#          @@@ local-definition "Alias: one"
#              @@@ local-definition "Alias: two"
    User bar
    Port 22
    #    ^^ constant.numeric
    ProxyCommand none
#^^^^^^^^^^^^^^^^^^^^ meta.block.match
#   ^^^^^^^^^^^^ meta.mapping.key keyword.other
#                ^^^^ meta.mapping.value constant.language.null.ssh.common

Match LocalNetwork 127.0.0.1/12,10.1.21.0/24
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.block.match.ssh_config
#^^^^ keyword.control.conditional.ssh_config
#    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.statement.conditional.ssh_config
#     ^^^^^^^^^^^^ keyword.other.ssh_config
#                  ^^^^^^^^^ meta.number.integer.other.ssh.common constant.numeric.ip-address.v4.ssh.common
#                           ^ punctuation.separator.sequence.ssh.common
#                            ^^ constant.other.range.ssh.common
#                              ^ punctuation.separator.sequence.ssh.common
#                               ^^^^^^^^^ meta.number.integer.other.ssh.common constant.numeric.ip-address.v4.ssh.common
#                                        ^ punctuation.separator.sequence.ssh.common
#                                         ^^ constant.other.range.ssh.common

Host tj
#    @@ local-definition "Alias: tj"
    User 2022sratna
#^^^^^^^^^^^^^^^^^^ meta.block.host.ssh_config
#   ^^^^ meta.mapping.key.ssh_config keyword.other.ssh_config
#        ^^^^^^^^^^ meta.mapping.value.ssh.common string.unquoted.ssh.common - meta.number - constant

Host server serverino !other-pat?ern
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.block.host.ssh_config - meta.block.match - meta.block meta.block
#^^^ keyword.declaration.host-alias.ssh_config
#   ^                 - entity
#    ^^^^^^           entity.name.label.host-alias.ssh_config
#          ^          - entity
#           ^^^^^^^^^ entity.name.label.host-alias.ssh_config
#                    ^               - entity
#                     ^              keyword.operator.logical.ssh.common
#                      ^^^^^^^^^^^^^ entity.name.label.host-alias.ssh_config
#                               ^    constant.other.wildcard.questionmark.ssh.common
#    @@@@@@ local-definition "Alias: server"
#           @@@@@@@@@ local-definition "Alias: serverino"
#                      @@@@@@@@@@@@@ local-definition "Alias: other-pat?ern"
    Hostname server%h.com
#^^^^^^^^^^^^^^^^^^^^^^^^ meta.block.host.ssh_config
#   ^^^^^^^^ meta.mapping.key.ssh_config keyword.declaration.host.ssh_config
#            ^^^^^^^^^^^^ meta.string.host.ssh_config string.unquoted.hostname.ssh_config
#                  ^^ constant.character.escape.ssh_config
#                    ^ punctuation.separator.sequence.ssh.common
#            @@@@@@@@@@@@ local-definition "Host: server%h.com"
    # This is meant to be a comment
#   ^ punctuation.definition.comment.ssh.common
#   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ comment.line.number-sign.ssh.common
    User=will
#^^^^^^^^^^^^ meta.block.host.ssh_config
#   ^^^^ meta.mapping.key.ssh_config keyword.other.ssh_config
#       ^ keyword.operator.assignment.ssh_config
#        ^^^^ meta.mapping.value.ssh.common string.unquoted.ssh.common
    User="will
#^^^^^^^^^^^^ meta.block.host.ssh_config
#   ^^^^ meta.mapping.key.ssh_config keyword.other.ssh_config
#       ^ keyword.operator.assignment.ssh_config
#        ^^^^^ meta.mapping.value.ssh.common string.quoted.double.ssh.common
#        ^ punctuation.definition.string.begin.ssh.common
#             ^ invalid.illegal.unclosed-string.ssh.common
    ProxyCommand nc -x localhost:8888 %h %p
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.block.host.ssh_config
#   ^^^^^^^^^^^^ meta.mapping.key.ssh_config keyword.other.ssh_config
#               ^                            - source.shell
#                ^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.mapping.value.ssh_config source.shell.embedded.ssh.proxycommand source.shell
#                ^^ meta.function-call.identifier.shell meta.command.shell variable.function.shell
#                  ^^^^^^^^^^^^^^^^^^^^^^^^ meta.function-call.arguments.shell
#                   ^^ meta.parameter.option.shell variable.parameter.option.shell
#                   ^ punctuation.definition.parameter.shell
#                      ^^^^^^^^^^^^^^ meta.string string.unquoted.shell
#                                     ^^ constant.other.placeholder.ssh
#                                        ^^ constant.other.placeholder.ssh
#                                          ^                            - source.shell
#                @@ reference
    IdentityFile ~/.ssh/creds/%h.pem
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.block.host.ssh_config
#   ^^^^^^^^^^^^ meta.mapping.key.ssh_config keyword.other.ssh_config
#                ^^^^^^^^^^^^^^^^^^^ meta.mapping.value.ssh.common meta.path.ssh.common entity.name.ssh.common
#                ^ variable.language.home.ssh.common
#                 ^ punctuation.separator.path.ssh.common
#                  ^ - punctuation
#                      ^ punctuation.separator.path.ssh.common
#                            ^ punctuation.separator.path.ssh.common
#                             ^^ constant.other.placeholder.ssh_config
#                               ^ punctuation.separator.sequence.ssh.common

Host *.splat?.com
#^^^^^^^^^^^^^^^^ meta.block.host.ssh_config
#^^^ keyword.declaration.host-alias.ssh_config
#   ^             - entity
#    ^^^^^^^^^^^^ entity.name.label.host-alias.ssh_config
#    ^ constant.other.wildcard.asterisk.ssh.common
#     ^ punctuation.separator.sequence.ssh.common
#           ^ constant.other.wildcard.questionmark.ssh.common
#            ^ punctuation.separator.sequence.ssh.common
#                ^ - entity
#    @@@@@@@@@@@@ local-definition "Alias: *.splat?.com"
    User tim
#^^^^^^^^^^^ meta.block.host.ssh_config
#   ^^^^ meta.mapping.key.ssh_config keyword.other.ssh_config
#        ^^^ meta.mapping.value.ssh.common string.unquoted.ssh.common
    Compression yes
#^^^^^^^^^^^^^^^^^^ meta.block.host.ssh_config
#   ^^^^^^^^^^^ meta.mapping.key.ssh_config keyword.other.ssh_config
#               ^^^ meta.mapping.value.ssh.common constant.language.boolean.true.ssh.common
    CompressionLevel 7
#^^^^^^^^^^^^^^^^^^^^^ meta.block.host.ssh_config
#   ^^^^^^^^^^^^^^^^ meta.mapping.key.ssh_config keyword.other.ssh_config - invalid
#                    ^ meta.mapping.value.ssh.common meta.number.integer.ssh_config constant.numeric.value.ssh_config

    ProxyJump 1.1.1.1:27,jim@festival%h2:8080
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.block.host.ssh_config
#   ^^^^^^^^^ meta.mapping.key.ssh_config keyword.other.ssh_config
#             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.mapping.value.ssh_config
#             ^^^^^^^ meta.number.integer.other.ssh.common constant.numeric.ip-address.v4.ssh.common
#                    ^ punctuation.separator.ssh_config
#                     ^^ meta.number.integer.decimal.ssh.common constant.numeric.port-number.ssh.common
#                       ^ punctuation.separator.sequence.ssh.common
#                        ^^^ meta.string.user.ssh_config string.unquoted.ssh_config
#                           ^ punctuation.separator.ssh_config
#                            ^^^^^^^^^^^ string.unquoted.hostname.ssh_config
#                                    ^^ constant.other.placeholder.ssh_config
#                                       ^ punctuation.separator.ssh_config
#                                        ^^^^ meta.number.integer.decimal.ssh.common constant.numeric.port-number.ssh.common

# Comment
# <- comment.line.number-sign.ssh.common punctuation.definition.comment.ssh.common
#^^^^^^^^ comment.line.number-sign.ssh.common

    # Comment
#^^^ - comment
#   ^^^^^^^^^ comment.line.number-sign.ssh.common
#   ^ punctuation.definition.comment.ssh.common

; Comment
# <- comment.line.semi-colon.ssh.common punctuation.definition.comment.ssh.common
#^^^^^^^^ comment.line.semi-colon.ssh.common

    ; Comment
#^^^ - comment
#   ^^^^^^^^^ comment.line.semi-colon.ssh.common
#   ^ punctuation.definition.comment.ssh.common

Host *
#^^^^^ meta.block.host.ssh_config - meta.block meta.block
#^^^ meta.block.host.ssh_config keyword.declaration.host-alias.ssh_config
#    ^ entity.name.label.host-alias.ssh_config constant.other.wildcard.asterisk.ssh.common
#    @ local-definition "Alias: *"
    IdentityFile ~/.ssh/id_rsa
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.block.host.ssh_config
#   ^^^^^^^^^^^^ meta.mapping.key.ssh_config keyword.other.ssh_config
#                ^^^^^^^^^^^^^ meta.mapping.value.ssh.common meta.path.ssh.common entity.name.ssh.common
#                ^ variable.language.home.ssh.common
#                 ^ punctuation.separator.path.ssh.common
#                  ^ - punctuation
#                      ^ punctuation.separator.path.ssh.common
    Ciphers "aes128-ctr,aes192-ctr,aes256-ctr"
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.block.host.ssh_config
#   ^^^^^^^ meta.mapping.key.ssh_config keyword.other.ssh_config
#           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.mapping.value.ssh.common string.quoted.double.ssh.common
#           ^ punctuation.definition.string.begin.ssh.common
#            ^^^^^^^^^^ support.function.cipher
#                      ^ punctuation.separator.sequence.ssh.common
#                       ^^^^^^^^^^ support.function.cipher
#                                 ^ punctuation.separator.sequence.ssh.common
#                                  ^^^^^^^^^^ support.function.cipher
#                                            ^ punctuation.definition.string.end.ssh.common
    UseKeychain yes
#^^^^^^^^^^^^^^^^^^ meta.block.host.ssh_config
#   ^^^^^^^^^^^ meta.mapping.key.ssh_config keyword.other.ssh_config
#               ^^^ meta.mapping.value.ssh.common constant.language.boolean.true.ssh.common
    UseRoaming no
#^^^^^^^^^^^^^^^^ meta.block.host.ssh_config
#   ^^^^^^^^^^ meta.mapping.key.ssh_config keyword.other.ssh_config
#              ^^ meta.mapping.value.ssh.common constant.language.boolean.false.ssh.common
    StrictHostKeyChecking ask
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.block.host.ssh_config
#   ^^^^^^^^^^^^^^^^^^^^^ meta.mapping.key.ssh_config keyword.other.ssh_config
#                         ^^^ meta.mapping.value.ssh.common constant.language.ssh_config
    StrictHostKeyChecking as
#^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.block.host.ssh_config
#   ^^^^^^^^^^^^^^^^^^^^^ meta.mapping.key.ssh_config keyword.other.ssh_config
#                         ^^ meta.mapping.value.ssh.common - invalid - constant

Match Host *.example.com Exec "! grep -q -E '^\s*search[ \t]+example\.com' /etc/resolv.conf"
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.block.match.ssh_config
#^^^^ keyword.control.conditional.ssh_config
#    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.statement.conditional.ssh_config
#     ^^^^ keyword.other.ssh_config
#          ^^^^^^^^^^^^^ entity.name.label.host-alias.ssh_config
#          ^ constant.other.wildcard.asterisk.ssh.common
#           ^ punctuation.separator.sequence.ssh.common
#                   ^ punctuation.separator.sequence.ssh.common
#                        ^^^^ keyword.other.ssh_config
#                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ string.quoted.double.ssh_config
#                             ^ punctuation.definition.string.begin.ssh_config
#                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.shell
#                                ^^^^ variable.function.shell
#                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ - variable.function
#                                                                                          ^ punctuation.definition.string.end.ssh_config - source.shell
#          @@@@@@@@@@@@@ local-definition "Alias: *.example.com"
#                                @@@@ reference
Match Host *.example.com Exec "! grep -q -E '^\s*search[ \t]+example\.com' /etc/resolv.conf" Canonical
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.block.match.ssh_config
#^^^^ keyword.control.conditional.ssh_config
#    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.statement.conditional.ssh_config
#     ^^^^ keyword.other.ssh_config
#          ^^^^^^^^^^^^^ entity.name.label.host-alias.ssh_config
#          ^ constant.other.wildcard.asterisk.ssh.common
#           ^ punctuation.separator.sequence.ssh.common
#                   ^ punctuation.separator.sequence.ssh.common
#                        ^^^^ keyword.other.ssh_config
#                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ string.quoted.double.ssh_config
#                             ^ punctuation.definition.string.begin.ssh_config
#                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.shell
#                                ^^^^ variable.function.shell
#                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ - variable.function
#                                                                                          ^ punctuation.definition.string.end.ssh_config - source.shell
#                                                                                            ^^^^^^^^^ keyword.other.ssh_config
#          @@@@@@@@@@@@@ local-definition "Alias: *.example.com"
#                                @@@@ reference
    KnownHostsCommand none
#^^^^^^^^^^^^^^^^^^^^^^^^^ meta.block.match.ssh_config - meta.block meta.block
#   ^^^^^^^^^^^^^^^^^ meta.mapping.key.ssh_config keyword.other.ssh_config
#                     ^^^^ meta.mapping.value.ssh_config constant.language.null.ssh.common
    KnownHostsCommand "none"
#^^^^^^^^^^^^^^^^^^^^^^^^^ meta.block.match.ssh_config - meta.block meta.block
#   ^^^^^^^^^^^^^^^^^ meta.mapping.key.ssh_config keyword.other.ssh_config
#                     ^^^^^^ meta.mapping.value.ssh_config string.quoted.double.ssh.common
#                     ^ punctuation.definition.string.begin.ssh.common
#                      ^^^^ constant.language.null.ssh.common
#                          ^ punctuation.definition.string.end.ssh.common
    KnownHostsCommand echo %% %a %b %c %d %e %f %g %h %i %j %k %l %m %n %o %p %q %r %s %t %u %v %w %x %y %z
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.block.match.ssh_config
#   ^^^^^^^^^^^^^^^^^ meta.mapping.key.ssh_config keyword.other.ssh_config
#                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.shell.embedded.ssh.knownhostscommand source.shell
#                     ^^^^^ - constant
#                     ^^^^ meta.function-call.identifier.shell support.function.shell
#                          ^^ constant.character.escape.ssh
#                            ^^^^^^^^^^ - constant
#                                      ^^ constant.other.placeholder.ssh
#                                        ^^^^ - constant
#                                            ^^ constant.other.placeholder.ssh
#                                              ^^^^ - constant
#                                                  ^^ constant.other.placeholder.ssh
#                                                     ^^ constant.other.placeholder.ssh
#                                                       ^^^^ - constant
#                                                           ^^ constant.other.placeholder.ssh
#                                                              ^^ constant.other.placeholder.ssh
#                                                                ^^^^ - constant
#                                                                    ^^ constant.other.placeholder.ssh
#                                                                      ^^^^ - constant
#                                                                          ^^ constant.other.placeholder.ssh
#                                                                            ^^^^ - constant
#                                                                                ^^ constant.other.placeholder.ssh
#                                                                                  ^^^^ - constant
#                                                                                      ^^ constant.other.placeholder.ssh
#                                                                                         ^^ constant.other.placeholder.ssh
#                                                                                           ^^^^^^^^^^^^^^^ - constant
#                     @@@@ reference
    KnownHostsCommand echo %% %A %B %C %D %E %F %G %H %I %J %K %L %M %N %O %P %Q %R %S %T %U %V %W %X %Y %Z
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.block.match.ssh_config
#   ^^^^^^^^^^^^^^^^^ meta.mapping.key.ssh_config keyword.other.ssh_config
#                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.shell.embedded.ssh.knownhostscommand source.shell
#                     ^^^^^ - constant
#                     ^^^^ meta.function-call.identifier.shell support.function.shell
#                          ^^ constant.character.escape.ssh
#                            ^^^^^^^ - constant
#                                   ^^ constant.other.placeholder.ssh
#                                     ^^^^^^^^^^^^^ - constant
#                                                  ^^ constant.other.placeholder.ssh
#                                                     ^^ constant.other.placeholder.ssh
#                                                       ^^^^ - constant
#                                                           ^^ constant.other.placeholder.ssh
#                                                              ^^ constant.other.placeholder.ssh
#                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ - constant
#                     @@@@ reference
    KnownHostsCommand "echo %% %a %b %c %d %e %f %g %h %i %j %k %l %m %n %o %p %q %r %s %t %u %v %w %x %y %z"
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.block.match.ssh_config
#   ^^^^^^^^^^^^^^^^^ meta.mapping.key.ssh_config keyword.other.ssh_config
#                     ^ punctuation.definition.string.begin.ssh_config - source.shell
#                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.shell.embedded.ssh.knownhostscommand source.shell
#                      ^^^^^ - constant
#                      ^^^^ meta.function-call.identifier.shell support.function.shell
#                           ^^ constant.character.escape.ssh
#                             ^^^^^^^^^^ - constant
#                                       ^^ constant.other.placeholder.ssh
#                                         ^^^^ - constant
#                                             ^^ constant.other.placeholder.ssh
#                                               ^^^^ - constant
#                                                   ^^ constant.other.placeholder.ssh
#                                                      ^^ constant.other.placeholder.ssh
#                                                        ^^^^ - constant
#                                                            ^^ constant.other.placeholder.ssh
#                                                               ^^ constant.other.placeholder.ssh
#                                                                 ^^^^ - constant
#                                                                     ^^ constant.other.placeholder.ssh
#                                                                       ^^^^ - constant
#                                                                           ^^ constant.other.placeholder.ssh
#                                                                             ^^^^ - constant
#                                                                                 ^^ constant.other.placeholder.ssh
#                                                                                   ^^^^ - constant
#                                                                                       ^^ constant.other.placeholder.ssh
#                                                                                          ^^ constant.other.placeholder.ssh
#                                                                                            ^^^^^^^^^^^^^^^ - constant
#                                                                                                           ^ punctuation.definition.string.end.ssh_config - source.shell
#                      @@@@ reference
    KnownHostsCommand "echo %% %A %B %C %D %E %F %G %H %I %J %K %L %M %N %O %P %Q %R %S %T %U %V %W %X %Y %Z"
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.block.match.ssh_config
#   ^^^^^^^^^^^^^^^^^ meta.mapping.key.ssh_config keyword.other.ssh_config
#                     ^ punctuation.definition.string.begin.ssh_config - source.shell
#                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.shell.embedded.ssh.knownhostscommand source.shell
#                      ^^^^ meta.function-call.identifier.shell support.function.shell
#                           ^^ constant.character.escape.ssh
#                             ^^^^^^^ - constant
#                                    ^^ constant.other.placeholder.ssh
#                                      ^^^^^^^^^^^^^ - constant
#                                                   ^^ constant.other.placeholder.ssh
#                                                      ^^ constant.other.placeholder.ssh
#                                                        ^^^^ - constant
#                                                            ^^ constant.other.placeholder.ssh
#                                                               ^^ constant.other.placeholder.ssh
#                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ - constant
#                                                                                                           ^ punctuation.definition.string.end.ssh_config - source.shell
#                      @@@@ reference
    LocalCommand none
#^^^^^^^^^^^^^^^^^^^^ meta.block.match.ssh_config - meta.block meta.block
#   ^^^^^^^^^^^^ meta.mapping.key.ssh_config keyword.other.ssh_config
#                ^^^^ meta.mapping.value.ssh_config constant.language.null.ssh.common
    LocalCommand "none"
#^^^^^^^^^^^^^^^^^^^^^^^^^ meta.block.match.ssh_config - meta.block meta.block
#   ^^^^^^^^^^^^ meta.mapping.key.ssh_config keyword.other.ssh_config
#                ^^^^^^ meta.mapping.value.ssh_config string.quoted.double.ssh.common
#                ^ punctuation.definition.string.begin.ssh.common
#                 ^^^^ constant.language.null.ssh.common
#                     ^ punctuation.definition.string.end.ssh.common
    LocalCommand echo %% %a %b %c %d %e %f %g %h %i %j %k %l %m %n %o %p %q %r %s %t %u %v %w %x %y %z
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.block.match.ssh_config
#   ^^^^^^^^^^^^ meta.mapping.key.ssh_config keyword.other.ssh_config
#                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.mapping.value.ssh_config source.shell.embedded.ssh.localcommand source.shell
#                ^^^^ meta.function-call.identifier.shell support.function.shell
#                     ^^ constant.character.escape.ssh
#                       ^^^^^^^^^^ - constant
#                                 ^^ constant.other.placeholder.ssh
#                                   ^^^^^^^^^^ - constant
#                                             ^^ constant.other.placeholder.ssh
#                                                ^^ constant.other.placeholder.ssh
#                                                  ^^^^ - constant
#                                                      ^^ constant.other.placeholder.ssh
#                                                         ^^ constant.other.placeholder.ssh
#                                                           ^^^^ - constant
#                                                               ^^ constant.other.placeholder.ssh
#                                                                 ^^^^ - constant
#                                                                     ^^ constant.other.placeholder.ssh
#                                                                       ^^^^ - constant
#                                                                           ^^ constant.other.placeholder.ssh
#                                                                             ^^^^^^^ - constant
#                                                                                    ^^ constant.other.placeholder.ssh
#                                                                                      ^^^^^^^^^^^^^^^ - constant
#                @@@@ reference
    LocalCommand echo %% %A %B %C %D %E %F %G %H %I %J %K %L %M %N %O %P %Q %R %S %T %U %V %W %X %Y %Z
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.block.match.ssh_config
#   ^^^^^^^^^^^^ meta.mapping.key.ssh_config keyword.other.ssh_config
#                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.mapping.value.ssh_config source.shell.embedded.ssh.localcommand source.shell
#                ^^^^ meta.function-call.identifier.shell support.function.shell
#                     ^^ constant.character.escape.ssh
#                       ^^^^^^^ - constant
#                              ^^ constant.other.placeholder.ssh
#                                ^^^^^^^^^^^^^^^^^^^^^^^^^ - constant
#                                                         ^^ constant.other.placeholder.ssh
#                                                           ^^^^^^^^^^^^^^^^^^^^^^ - constant
#                                                                                 ^^ constant.other.placeholder.ssh
#                                                                                   ^^^^^^^^^^^^^^^^^^ - constant
#                @@@@ reference
    LocalCommand "echo %% %a %b %c %d %e %f %g %h %i %j %k %l %m %n %o %p %q %r %s %t %u %v %w %x %y %z"
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.block.match.ssh_config
#   ^^^^^^^^^^^^ meta.mapping.key.ssh_config keyword.other.ssh_config
#                ^ punctuation.definition.string.begin.ssh_config - source.shell
#                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.mapping.value.ssh_config source.shell.embedded.ssh.localcommand source.shell
#                 ^^^^ meta.function-call.identifier.shell support.function.shell
#                      ^^ constant.character.escape.ssh
#                        ^^^^^^^^^^ - constant
#                                  ^^ constant.other.placeholder.ssh
#                                    ^^^^^^^^^^ - constant
#                                              ^^ constant.other.placeholder.ssh
#                                                 ^^ constant.other.placeholder.ssh
#                                                   ^^^^ - constant
#                                                       ^^ constant.other.placeholder.ssh
#                                                          ^^ constant.other.placeholder.ssh
#                                                            ^^^^ - constant
#                                                                ^^ constant.other.placeholder.ssh
#                                                                  ^^^^ - constant
#                                                                      ^^ constant.other.placeholder.ssh
#                                                                        ^^^^ - constant
#                                                                            ^^ constant.other.placeholder.ssh
#                                                                              ^^^^^^^ - constant
#                                                                                     ^^ constant.other.placeholder.ssh
#                                                                                       ^^^^^^^^^^^^^^^ - constant
#                                                                                                      ^ punctuation.definition.string.end.ssh_config - source.shell
#                 @@@@ reference
    LocalCommand "echo %% %A %B %C %D %E %F %G %H %I %J %K %L %M %N %O %P %Q %R %S %T %U %V %W %X %Y %Z"
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.block.match.ssh_config
#   ^^^^^^^^^^^^ meta.mapping.key.ssh_config keyword.other.ssh_config
#                ^ punctuation.definition.string.begin.ssh_config - source.shell
#                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.mapping.value.ssh_config source.shell.embedded.ssh.localcommand source.shell
#                 ^^^^ meta.function-call.identifier.shell support.function.shell
#                      ^^ constant.character.escape.ssh
#                        ^^^^^^^ - constant
#                               ^^ constant.other.placeholder.ssh
#                                 ^^^^^^^^^^^^^^^^^^^^^^^^^ - constant
#                                                          ^^ constant.other.placeholder.ssh
#                                                            ^^^^^^^^^^^^^^^^^^^^^^ - constant
#                                                                                  ^^ constant.other.placeholder.ssh
#                                                                                    ^^^^^^^^^^^^^^^^^^ - constant
#                                                                                                      ^ punctuation.definition.string.end.ssh_config - source.shell
#                 @@@@ reference
    ProxyCommand none
#^^^^^^^^^^^^^^^^^^^^ meta.block.match.ssh_config - meta.block meta.block
#   ^^^^^^^^^^^^ meta.mapping.key.ssh_config keyword.other.ssh_config
#               ^ - constant
#                ^^^^ meta.mapping.value.ssh_config constant.language.null.ssh.common
    ProxyCommand "none"
#^^^^^^^^^^^^^^^^^^^^^^^^^ meta.block.match.ssh_config - meta.block meta.block
#   ^^^^^^^^^^^^ meta.mapping.key.ssh_config keyword.other.ssh_config
#                ^^^^^^ meta.mapping.value.ssh_config string.quoted.double.ssh.common
#                ^ punctuation.definition.string.begin.ssh.common
#                 ^^^^ constant.language.null.ssh.common
#                     ^ punctuation.definition.string.end.ssh.common
    ProxyCommand echo %% %a %b %c %d %e %f %g %h %i %j %k %l %m %n %o %p %q %r %s %t %u %v %w %x %y %z
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.block.match.ssh_config
#   ^^^^^^^^^^^^ meta.mapping.key.ssh_config keyword.other.ssh_config
#                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.mapping.value.ssh_config source.shell.embedded.ssh.proxycommand source.shell
#                ^^^^ meta.function-call.identifier.shell support.function.shell
#                     ^^ constant.character.escape.ssh
#                       ^^^^^^^^^^^^^^^^^^^^^^ - constant
#                                             ^^ constant.other.placeholder.ssh
#                                               ^^^^^^^^^^^^^^^^ - constant
#                                                               ^^ constant.other.placeholder.ssh
#                                                                 ^^^^ - constant
#                                                                     ^^ constant.other.placeholder.ssh
#                                                                       ^^^^ - constant
#                                                                           ^^ constant.other.placeholder.ssh
#                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^ - constant
#                @@@@ reference
    ProxyCommand echo %% %A %B %C %D %E %F %G %H %I %J %K %L %M %N %O %P %Q %R %S %T %U %V %W %X %Y %Z
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.block.match.ssh_config
#   ^^^^^^^^^^^^ meta.mapping.key.ssh_config keyword.other.ssh_config
#                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.mapping.value.ssh_config source.shell.embedded.ssh.proxycommand source.shell
#                ^^^^ meta.function-call.identifier.shell support.function.shell
#                     ^^ constant.character.escape.ssh
#                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ - constant
#                @@@@ reference
    ProxyCommand "echo %% %a %b %c %d %e %f %g %h %i %j %k %l %m %n %o %p %q %r %s %t %u %v %w %x %y %z"
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.block.match.ssh_config
#   ^^^^^^^^^^^^ meta.mapping.key.ssh_config keyword.other.ssh_config
#                ^ punctuation.definition.string.begin.ssh_config - source.shell
#                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.mapping.value.ssh_config source.shell.embedded.ssh.proxycommand source.shell
#                 ^^^^ meta.function-call.identifier.shell support.function.shell
#                      ^^ constant.character.escape.ssh
#                        ^^^^^^^^^^^^^^^^^^^^^^ - constant
#                                              ^^ constant.other.placeholder.ssh
#                                                ^^^^^^^^^^^^^^^^ - constant
#                                                                ^^ constant.other.placeholder.ssh
#                                                                  ^^^^ - constant
#                                                                      ^^ constant.other.placeholder.ssh
#                                                                        ^^^^ - constant
#                                                                            ^^ constant.other.placeholder.ssh
#                                                                              ^^^^^^^^^^^^^^^^^^^^^^^^ - constant
#                                                                                                      ^ punctuation.definition.string.end.ssh_config - source.shell
#                 @@@@ reference
    ProxyCommand "echo %% %A %B %C %D %E %F %G %H %I %J %K %L %M %N %O %P %Q %R %S %T %U %V %W %X %Y %Z"
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.block.match.ssh_config
#   ^^^^^^^^^^^^ meta.mapping.key.ssh_config keyword.other.ssh_config
#                ^ punctuation.definition.string.begin.ssh_config - source.shell
#                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.mapping.value.ssh_config source.shell.embedded.ssh.proxycommand source.shell
#                 ^^^^ meta.function-call.identifier.shell support.function.shell
#                      ^^ constant.character.escape.ssh
#                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ - constant
#                                                                                                      ^ punctuation.definition.string.end.ssh_config - source.shell
#                 @@@@ reference
    ProxyJump none
#^^^^^^^^^^^^^^^^^ meta.block.match.ssh_config - meta.block meta.block
#   ^^^^^^^^^ meta.mapping.key.ssh_config keyword.other.ssh_config
#             ^^^^ meta.mapping.value.ssh_config constant.language.null.ssh.common
    ProxyJump "none"
#^^^^^^^^^^^^^^^^^^^ meta.block.match.ssh_config - meta.block meta.block
#   ^^^^^^^^^ meta.mapping.key.ssh_config keyword.other.ssh_config
#             ^^^^^^ meta.mapping.value.ssh_config string.quoted.double.ssh.common
#             ^ punctuation.definition.string.begin.ssh.common
#              ^^^^ constant.language.null.ssh.common
#                  ^ punctuation.definition.string.end.ssh.common
    ProxyJump %% %a %b %c %d %e %f %g %h %i %j %k %l %m %n %o %p %q %r %s %t %u %v %w %x %y %z
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.block.match.ssh_config
#   ^^^^^^^^^ meta.mapping.key.ssh_config keyword.other.ssh_config
#             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.mapping.value.ssh_config
#             ^^ constant.character.escape.ssh_config
#               ^^^^^^^^^^^^^^^^^^^^^^ - constant
#                                     ^^ constant.other.placeholder.ssh_config
#                                       ^^^^^^^^^^^^^^^^ - constant
#                                                       ^^ constant.other.placeholder.ssh_config
#                                                         ^^^^ - constant
#                                                             ^^ constant.other.placeholder.ssh_config
#                                                               ^^^^ - constant
#                                                                   ^^ constant.other.placeholder.ssh_config
#                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^ - constant
    ProxyJump %% %A %B %C %D %E %F %G %H %I %J %K %L %M %N %O %P %Q %R %S %T %U %V %W %X %Y %Z
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.block.match.ssh_config
#   ^^^^^^^^^ meta.mapping.key.ssh_config keyword.other.ssh_config
#                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.mapping.value.ssh_config
#             ^^ constant.character.escape.ssh_config
#               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ - constant
    ProxyJump "%% %a %b %c %d %e %f %g %h %i %j %k %l %m %n %o %p %q %r %s %t %u %v %w %x %y %z"
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.block.match.ssh_config
#   ^^^^^^^^^ meta.mapping.key.ssh_config keyword.other.ssh_config
#             ^ punctuation.definition.string.begin.ssh_config - source.shell
#              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.mapping.value.ssh_config
#              ^^ constant.character.escape.ssh_config
#                ^^^^^^^^^^^^^^^^^^^^^^ - constant
#                                      ^^ constant.other.placeholder.ssh_config
#                                        ^^^^^^^^^^^^^^^^ - constant
#                                                        ^^ constant.other.placeholder.ssh_config
#                                                          ^^^^ - constant
#                                                              ^^ constant.other.placeholder.ssh_config
#                                                                ^^^^ - constant
#                                                                    ^^ constant.other.placeholder.ssh_config
#                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^ - constant
#                                                                                              ^ punctuation.definition.string.end.ssh_config - source.shell
    ProxyJump "%% %A %B %C %D %E %F %G %H %I %J %K %L %M %N %O %P %Q %R %S %T %U %V %W %X %Y %Z"
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.block.match.ssh_config
#   ^^^^^^^^^ meta.mapping.key.ssh_config keyword.other.ssh_config
#             ^ punctuation.definition.string.begin.ssh_config - source.shell
#              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.mapping.value.ssh_config
#              ^^ constant.character.escape.ssh_config
#                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ - constant
#                                                                                              ^ punctuation.definition.string.end.ssh_config - source.shell
