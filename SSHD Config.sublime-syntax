%YAML 1.2
---
# https://www.sublimetext.com/docs/syntax.html
# https://man7.org/linux/man-pages/man5/sshd_config.5.html
# https://man.openbsd.org/sshd_config.5
name: SSHD Config
scope: source.sshd_config
version: 2
extends: SSH Crypto.sublime-syntax

file_extensions:
  - sshd_config

contexts:
  main:
    - include: comments
    - include: match
    - include: parameters

  parameters:
    - include: comments
    - include: parameter-forcecommand
    - include: parameter-authorizedkeyscommand
    - include: parameter-authorizedprincipalscommand
    - include: parameter-path-with-tokens
    - include: parameter-routingdomain
    - include: parameter-with-boolean-values
    - include: parameter-generic

  comments:
    - match: (#+)(?:\s*({{all_parameters}}))?
      captures:
        1: punctuation.definition.comment.sshd_config
        2: meta.keyword.comment.sshd_config
      push:
        - meta_scope: comment.line.number-sign.sshd_config
        - include: pop-nl
    - match: (;+)(?:\s*({{all_parameters}}))?
      captures:
        1: punctuation.definition.comment.sshd_config
        2: meta.keyword.comment.sshd_config
      push:
        - meta_scope: comment.line.semi-colon.sshd_config
        - include: pop-nl

  tokens:
    # https://man7.org/linux/man-pages/man5/sshd_config.5.html#TOKENS
    # https://man.openbsd.org/sshd_config.5#TOKENS
    # Skipping the ones injected into shell commands
    - match: '%%'
      scope: constant.character.escape.sshd_config
    - match: '%[hUu]'
      scope: constant.other.placeholder.sshd_config

  pop-before-match-option:
    - include: pop-before-nl
    - match: '(?=\s*(?xi: all | user | group | host | (?:local)? address | localport )\b)'
      pop: 1

  pop-before-next-match:
    - match: (?=^\s*(?i:Match)\b)
      pop: 1

###[ MATCH ]###################################################################

  match:
    - match: ^\s*((?i:Match))\b
      captures:
        1: keyword.control.conditional.sshd_config
      set: match-conditions

  match-conditions:
    - meta_scope: meta.block.match.sshd_config
    - meta_content_scope: meta.statement.conditional.sshd_config
    - match: \n
      set: match-body

    - include: operator-exclamation
    - include: match-all

    - match: '\b(?xi: host )\b'
      scope: meta.mapping.key.sshd_config
             keyword.other.sshd_config
      with_prototype:
        - include: punctuation-dot-sequence
      push:
        - meta_content_scope: meta.mapping.value.sshd_config
        - include: pop-before-match-option
        - include: string-patterns

    - match: '\b(?xi: user | group )\b'
      scope: meta.mapping.key.sshd_config
             keyword.other.sshd_config
      push:
        - meta_content_scope: meta.mapping.value.sshd_config
        - include: pop-before-match-option
        - include: string-patterns

    - match: '\b(?xi: (?:local)? address )\b'
      scope: meta.mapping.key.sshd_config
             keyword.other.sshd_config
      push:
        - meta_content_scope: meta.mapping.value.sshd_config
        - include: pop-before-match-option
        - include: operator-exclamation
        - include: wildcards
        - include: punctuation-comma-sequence
        - include: ip-addresses-with-cidr

    - match: '\b(?xi: localport )\b'
      scope: meta.mapping.key.sshd_config
             keyword.other.sshd_config
      push:
        - meta_content_scope: meta.mapping.value.sshd_config
        - include: pop-before-match-option
        - include: port-numbers

    - match: '\b(?xi: rdomain )\b'
      scope: meta.mapping.key.sshd_config
             keyword.other.sshd_config
      push:
        - meta_content_scope: meta.mapping.value.sshd_config
        - include: pop-before-match-option
        - match: \b{{zero_to_255}}\b
          scope: meta.number.integer.decimal.sshd_config
                 constant.numeric.value.sshd_config

  match-body:
    - meta_content_scope: meta.block.match.sshd_config
    - include: pop-before-next-match
    - include: parameters

  string-patterns:
    # https://man7.org/linux/man-pages/man5/sshd_config.5.html#PATTERNS
    # https://man.openbsd.org/ssh_config.5#PATTERNS
    - include: punctuation-comma-sequence
    - include: operator-exclamation
    - match: (?=\S)
      push:
        - meta_content_scope: string.unquoted.sshd_config
        - match: (?=[,!\s])
          pop: 1
        - include: wildcards

###[ PARAMETERS ]##############################################################

  parameter-forcecommand:
    - match: ^\s*((?i:ForceCommand))\b\s*(=)?
      captures:
        1: meta.mapping.key.sshd_config keyword.other.sshd_config
        2: keyword.operator.assignment.sshd_config
      push:
        - meta_content_scope: meta.mapping.value.sshd_config
        - include: pop-nl
        - include: none-command-values
        - match: '"'
          scope: string.quoted.double.sshd_config
                 punctuation.definition.string.begin.sshd_config
          escape: '(")|(?=$)'
          escape_captures:
            1: meta.mapping.value.sshd_config
               string.quoted.double.sshd_config
               punctuation.definition.string.end.sshd_config
          embed_scope: string.quoted.double.sshd_config
          embed: scope:source.shell
        - match: (?=\S)
          escape: (?=$)
          embed: scope:source.shell

  parameter-authorizedkeyscommand:
    - match: ^\s*((?i:AuthorizedKeysCommand))\b\s*(=)?
      captures:
        1: meta.mapping.key.sshd_config keyword.other.sshd_config
        2: keyword.operator.assignment.sshd_config
      push:
        - meta_content_scope: meta.mapping.value.sshd_config
        - include: pop-nl
        - match: '"'
          scope: string.quoted.double.sshd_config
                 punctuation.definition.string.begin.sshd_config
          escape: '(")|(?=$)'
          escape_captures:
            1: meta.mapping.value.sshd_config
               string.quoted.double.sshd_config
               punctuation.definition.string.end.sshd_config
          embed_scope: string.quoted.double.ssh_config
                       source.shell.embedded.ssh.authorizedkeyscommand
          embed: scope:source.shell.embedded.ssh.authorizedkeyscommand
        - match: (?=\S)
          escape: (?=$)
          embed: scope:source.shell.embedded.ssh.authorizedkeyscommand

  parameter-authorizedprincipalscommand:
    - match: ^\s*((?i:AuthorizedPrincipalsCommand))\b\s*(=)?
      captures:
        1: meta.mapping.key.sshd_config keyword.other.sshd_config
        2: keyword.operator.assignment.sshd_config
      push:
        - meta_content_scope: meta.mapping.value.sshd_config
        - include: pop-nl
        - match: '"'
          scope: string.quoted.double.sshd_config
                 punctuation.definition.string.begin.sshd_config
          escape: '(")|(?=$)'
          escape_captures:
            1: meta.mapping.value.sshd_config
               string.quoted.double.sshd_config
               punctuation.definition.string.end.sshd_config
          embed_scope: string.quoted.double.ssh_config
                       source.shell.embedded.ssh.authorizedprincipalscommand
          embed: scope:source.shell.embedded.ssh.authorizedprincipalscommand
        - match: (?=\S)
          escape: (?=$)
          embed: scope:source.shell.embedded.ssh.authorizedprincipalscommand

  parameter-path-with-tokens:
    - match: '^\s*((?ix: AuthorizedKeysFile | AuthorizedPrincipalsFile | ChrootDirectory ))\b\s*(=)?'
      captures:
        1: meta.mapping.key.sshd_config keyword.other.sshd_config
        2: keyword.operator.assignment.sshd_config
      with_prototype:
        - include: tokens
        - include: none
        - include: paths
      push: possibly-quoted-value

  parameter-routingdomain:
    - match: ^\s*((?i:RoutingDomain))\b\s*(=)?
      captures:
        1: meta.mapping.key.sshd_config keyword.other.sshd_config
        2: keyword.operator.assignment.sshd_config
      with_prototype:
        - match: '%D'
          scope: constant.other.placeholder.sshd_config
        - include: numeric-values
      push: possibly-quoted-value

  parameter-with-boolean-values:
    - match: ^\s*({{parameters_boolean}})\s*(=)?
      captures:
        1: meta.mapping.key.sshd_config keyword.other.sshd_config
        2: keyword.operator.assignment.sshd_config
      with_prototype:
        - include: boolean-with-typing
        - match: '[^"\s]+'
          scope: invalid.illegal.sshd_config
      push: possibly-quoted-value

  parameter-generic:
    - match: ^\s*([a-zA-Z1]+)\b\s*(=)?
      captures:
        1: meta.mapping.key.sshd_config keyword.other.sshd_config
        2: keyword.operator.assignment.sshd_config
      with_prototype:
        - include: generic-parameter-values
      push: possibly-quoted-value

  generic-parameter-values:
    - include: boolean
    - include: none
    - include: any
    - match: '\b(?xi: default )\b'
      scope: constant.language.default.sshd_config
    - include: ssh-key-types
    - include: ssh-ciphers
    - include: ssh-kex-algorithms
    - include: ssh-mac-algorithms
    - include: ipv6-square-bracket
    - include: ip-addresses-with-cidr
    - include: time-values
    - include: bytes-values
    - include: operator-exclamation
    - include: wildcards
    - include: punctuation-comma-sequence
    - include: log-level
    - include: paths
    - include: numeric-values
    - match: ':'
      scope: punctuation.separator.sequence.sshd_config

  numeric-values:
    - match: \b\d+(?=[\s,:"])
      scope: constant.numeric.sshd_config

###############################################################################

variables:
  all_parameters: |-
    \b(?xi:
        AcceptEnv | AddressFamily
      | Allow (?: AgentForwarding | Groups | StreamLocalForwarding
              | TcpForwarding | Users)
      | AuthenticationMethods
      | Authorized (?: Keys | Principals )(?: Command | CommandUser | File )
      | Banner
      | CASignatureAlgorithms | ChallengeResponseAuthentication
      | ChannelTimeout | ChrootDirectory | Ciphers | ClientAliveCountMax
      | ClientAliveInterval | Compression
      | DenyGroups | DenyUsers | DisableForwarding
      | ExposeAuthInfo
      | FingerprintHash | ForceCommand
      | GatewayPorts | GSSAPIAuthentication | GSSAPICleanupCredentials
      | GSSAPIStrictAcceptorCheck
      | Hostbased (?: AcceptedAlgorithms | AcceptedKeyTypes | Authentication
                  | UsesNameFromPacketOnly )
      | HostCertificate | HostKey | HostKeyAgent | HostKeyAlgorithms
      | IgnoreRhosts | IgnoreUserKnownHosts | Include | IPQoS
      | KbdInteractiveAuthentication
      | Kerberos (?: Authentication | GetAFSToken | OrLocalPasswd
                 | TicketCleanup )
      | KexAlgorithms | KeyRegenerationInterval
      | ListenAddress | LoginGraceTime | LogLevel | LogVerbose
      | MACs | Match | MaxAuthTries | MaxSessions | MaxStartups | ModuliFile
      | PasswordAuthentication
      | Permit (?: EmptyPasswords | Listen | Open | RootLogin | TTY | Tunnel
               | UserEnvironment | UserRC )
      | PerSource (?: MaxStartups | NetBlockSize | Penalties
                  | PenaltyExemptList )
      | PidFile | Port | PrintLastLog | PrintMotd | Protocol
      | Pubkey (?: AcceptedAlgorithms | AcceptedKeyTypes | AuthOptions
               | PubkeyAuthentication )
      | RekeyLimit | RequiredRSASize | RevokedKeys | RDomain
      | RhostsRSAAuthentication | RSAAuthentication
      | SecurityKeyProvider | ServerKeyBits | SetEnv | ShowPatchLevel  # SshSessionPath is just for tests
      | StreamLocalBindMask | StreamLocalBindUnlink
      | StrictModes | Subsystem | SyslogFacility
      | TCPKeepAlive | TrustedUserCAKeys
      | UnusedConnectionTimeout | UseDNS | UseLogin | UsePAM
      | UsePrivilegeSeparation
      | VersionAddendum
      | X11DisplayOffset | X11Forwarding | X11UseLocalhost | XAuthLocation
    )\b
  parameters_boolean: |-
    \b(?xi:
        AllowAgentForwarding
      | ChallengeResponseAuthentication | Compression
      | ExposeAuthInfo
      | GSSAPIAuthentication | GSSAPICleanupCredentials
      | GSSAPIStrictAcceptorCheck
      | HostbasedAuthentication | HostbasedUsesNameFromPacketOnly
      | IgnoreRhosts | IgnoreUserKnownHosts
      | KbdInteractiveAuthentication | KerberosAuthentication
      | KerberosGetAFSToken | KerberosOrLocalPasswd
      | KerberosTicketCleanup
      | PasswordAuthentication | PermitEmptyPasswords | PermitTTY
      | PermitUserEnvironment | PermitUserRC | PrintLastLog | PrintMotd
      | PubkeyAuthentication
      | StreamLocalBindUnlink | StrictModes
      | TCPKeepAlive
      | UseDNS | UsePAM
      | X11Forwarding | X11UseLocalhost
    )\b

